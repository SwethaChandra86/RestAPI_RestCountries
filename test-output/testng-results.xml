<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="3" total="6" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="0" started-at="2021-03-09T19:14:10 EST" finished-at="2021-03-09T19:14:10 EST">
    <groups>
    </groups>
  </suite> <!-- Suite -->
  <suite name="RestCountryRegressionTestSuite" duration-ms="4800" started-at="2021-03-09T19:14:05 EST" finished-at="2021-03-09T19:14:09 EST">
    <groups>
      <group name="regression">
        <method signature="RestCountry.getByCodeNegative()[pri:3, instance:com.restcountry.test.RestCountry@2353b3e6]" name="getByCodeNegative" class="com.restcountry.test.RestCountry"/>
      </group> <!-- regression -->
    </groups>
    <test name="RegressionTest" duration-ms="4800" started-at="2021-03-09T19:14:05 EST" finished-at="2021-03-09T19:14:09 EST">
      <class name="com.restcountry.test.RestCountry">
        <test-method status="PASS" signature="setLogger()[pri:0, instance:com.restcountry.test.RestCountry@2353b3e6]" name="setLogger" is-config="true" duration-ms="1" started-at="2021-03-09T19:14:05 EST" finished-at="2021-03-09T19:14:05 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLogger -->
        <test-method status="FAIL" signature="getByCodeNegative()[pri:3, instance:com.restcountry.test.RestCountry@2353b3e6]" name="getByCodeNegative" duration-ms="4794" started-at="2021-03-09T19:14:05 EST" finished-at="2021-03-09T19:14:09 EST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <200>
     but: was <405>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <200>
     but: was <405>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
at com.restcountry.test.RestCountry.getByCodeNegative(RestCountry.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1213)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getByCodeNegative -->
      </class> <!-- com.restcountry.test.RestCountry -->
    </test> <!-- RegressionTest -->
  </suite> <!-- RestCountryRegressionTestSuite -->
  <suite name="RestCountrySmokeTestSuite" duration-ms="10673" started-at="2021-03-09T19:13:54 EST" finished-at="2021-03-09T19:14:04 EST">
    <groups>
      <group name="sanity">
        <method signature="RestCountry.getByCode()[pri:2, instance:com.restcountry.test.RestCountry@76f2b07d]" name="getByCode" class="com.restcountry.test.RestCountry"/>
        <method signature="RestCountry.getByname()[pri:1, instance:com.restcountry.test.RestCountry@76f2b07d]" name="getByname" class="com.restcountry.test.RestCountry"/>
      </group> <!-- sanity -->
    </groups>
    <test name="SmokeTest" duration-ms="10673" started-at="2021-03-09T19:13:54 EST" finished-at="2021-03-09T19:14:04 EST">
      <class name="com.restcountry.test.RestCountry">
        <test-method status="PASS" signature="setLogger()[pri:0, instance:com.restcountry.test.RestCountry@76f2b07d]" name="setLogger" is-config="true" duration-ms="15" started-at="2021-03-09T19:13:54 EST" finished-at="2021-03-09T19:13:54 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLogger -->
        <test-method status="PASS" signature="getByname()[pri:1, instance:com.restcountry.test.RestCountry@76f2b07d]" name="getByname" duration-ms="6247" started-at="2021-03-09T19:13:54 EST" finished-at="2021-03-09T19:14:00 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getByname -->
        <test-method status="PASS" signature="getByCode()[pri:2, instance:com.restcountry.test.RestCountry@76f2b07d]" name="getByCode" duration-ms="4107" started-at="2021-03-09T19:14:00 EST" finished-at="2021-03-09T19:14:04 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getByCode -->
      </class> <!-- com.restcountry.test.RestCountry -->
    </test> <!-- SmokeTest -->
  </suite> <!-- RestCountrySmokeTestSuite -->
</testng-results>
